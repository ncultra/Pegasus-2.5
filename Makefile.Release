#//%2005////////////////////////////////////////////////////////////////////////
#//
#// Copyright (c) 2000, 2001, 2002 BMC Software; Hewlett-Packard Development
#// Company, L.P.; IBM Corp.; The Open Group; Tivoli Systems.
#// Copyright (c) 2003 BMC Software; Hewlett-Packard Development Company, L.P.;
#// IBM Corp.; EMC Corporation, The Open Group.
#// Copyright (c) 2004 BMC Software; Hewlett-Packard Development Company, L.P.;
#// IBM Corp.; EMC Corporation; VERITAS Software Corporation; The Open Group.
#// Copyright (c) 2005 Hewlett-Packard Development Company, L.P.; IBM Corp.;
#// EMC Corporation; VERITAS Software Corporation; The Open Group.
#//
#// Permission is hereby granted, free of charge, to any person obtaining a copy
#// of this software and associated documentation files (the "Software"), to
#// deal in the Software without restriction, including without limitation the
#// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
#// sell copies of the Software, and to permit persons to whom the Software is
#// furnished to do so, subject to the following conditions:
#// 
#// THE ABOVE COPYRIGHT NOTICE AND THIS PERMISSION NOTICE SHALL BE INCLUDED IN
#// ALL COPIES OR SUBSTANTIAL PORTIONS OF THE SOFTWARE. THE SOFTWARE IS PROVIDED
#// "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
#// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
#// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
#// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#//
#//==============================================================================
ifndef ROOT
 ifdef PEGASUS_ROOT
    ROOT =  $(subst \,/,$(PEGASUS_ROOT))
 else
    ROOT = .
 endif
endif

PEGASUS_RPM_SPEC_FILE_PATH=$(PEGASUS_ROOT)/rpm/tog-pegasus.spec

include $(ROOT)/mak/config.mak

DIRS = src

include $(ROOT)/mak/recurse.mak

FORCE:

rebuild: FORCE
	@$(MAKE) -f $(ROOT)/Makefile.Release -i cimstop
	@$(MAKE) -f $(ROOT)/Makefile.Release clean 
	@$(MAKE) -f $(ROOT)/Makefile.Release create_ProductVersionFile
	@$(MAKE) -f $(ROOT)/Makefile.Release depend
	@$(MAKE) -f $(ROOT)/Makefile.Release all 
	@$(MAKE) -f $(ROOT)/Makefile.Release repository
	@$(MAKE) -f $(ROOT)/Makefile.Release stage
	@$(ECHO) "build completed successfully"

repository: FORCE
	$(MAKE) "-SC" Schemas/Pegasus repository

stage: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release prestage_verifyInstallEnabled
	$(MAKE) -f $(ROOT)/Makefile.Release prestage_cleanup
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusDirectories 
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusFiles 
	$(MAKE) -f $(ROOT)/mak/SDKMakefile stageSDK
ifdef PEGASUS_BUILD_TEST_RPM
	$(MAKE) -f $(ROOT)/Makefile.ReleaseTest stageTEST
endif

preinstall: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release prestage_verifyInstallEnabled
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusDirectories 
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusFiles 
	
PEGASUS_LICENSE = \
   license.txt

PEGASUS_LIBRARIES = \
   libCIMxmlIndicationHandler \
   libConfigSettingProvider \
   libNamespaceProvider \
   libProviderRegistrationProvider \
   libUserAuthProvider \
   libpegauthentication \
   libpegclient \
   libpegcliutils \
   libpegcommon \
   libpegcompiler \
   libpegconfig \
   libpegexportclient \
   libpegexportserver \
   libpeggetoopt \
   libpeghandlerservice \
   libpegindicationservice \
   libpeglistener \
   libpegprm \
   libpegprovider \
   libpegprovidermanager \
   libpegrepository \
   libpegserver \
   libpeguser \
   libpegwql \
   libDefaultProviderManager \
   libCertificateProvider \
   libpegqueryexpression \
   libpegquerycommon \
   libInteropProvider \
   libCIMOMStatDataProvider \
   libpegservice 

ifndef PEGASUS_DISABLE_CQL
   PEGASUS_LIBRARIES += \
      libpegcql \
      libCIMQueryCapabilitiesProvider
endif

ifdef PEGASUS_ENABLE_CMPI_PROVIDER_MANAGER
PEGASUS_LIBRARIES += \
   libCMPIProviderManager \
   libcmpiCppImpl
endif

ifeq ($(OS),HPUX)
PEGASUS_LIBRARIES += \
   libNTPProviderSecurity
endif

PEGASUS_LIBRARY_LINKS = \
   libpegclient \
   libpegcommon \
   libpegprovider \
   libDefaultProviderManager \
   libCIMxmlIndicationHandler

ifdef PEGASUS_ENABLE_CMPI_PROVIDER_MANAGER
PEGASUS_LIBRARY_LINKS += \
   libCMPIProviderManager
endif

PEGASUS_PROVIDERS = \
   libComputerSystemProvider \
   libOSProvider \
   libProcessProvider

ifeq ($(OS),HPUX)
PEGASUS_PROVIDERS += \
   libNTPProvider \
   libNISProvider \
   libDNSProvider \
   libIPProviderModule
endif

PEGASUS_ADMIN_CMDS = \
   cimauth \
   cimconfig \
   cimserver \
   cimuser \
   cimprovagt \
   cimservera \
   repupgrade

PEGASUS_USER_CMDS = \
   cimmof \
   cimmofl \
   cimprovider \
   osinfo \
   wbemexec

PEGASUS_REPOSITORY_DIRS = \
   root \
   root\#PG_Internal \
   root\#PG_InterOp \
   root\#cimv2

PEGASUS_UNIX_MAN_USER_PAGES = \
   cimmof.1 \
   cimprovider.1 \
   osinfo.1 \
   wbemexec.1 

PEGASUS_UNIX_MAN_ADMIN_PAGES = \
   cimauth.8 \
   cimconfig.8 \
   cimserver.8

PEGASUS_DOC_FILES = \
   Admin_Guide_Release.pdf \
   PegasusSSLGuidelines.htm

CIM29_MOF_FILES = \
   Application_AppRuntime.mof \
   Application_BIOS.mof \
   Application_CheckAction.mof \
   Application_DeploymentModel.mof \
   Application_InstalledProduct.mof \
   Application_J2eeAppServer.mof \
   Application_J2eeAppServerStats.mof \
   Application_SystemSoftware.mof \
   CIM_Application.mof \
   CIM_Core.mof \
   CIM_Database.mof \
   CIM_Device.mof \
   CIM_Event.mof \
   CIM_IPsecPolicy.mof \
   CIM_Interop.mof \
   CIM_Metrics.mof \
   CIM_Network.mof \
   CIM_Physical.mof \
   CIM_Policy.mof \
   CIM_Schema.mof \
   CIM_Support.mof \
   CIM_System.mof \
   CIM_User.mof \
   Core_Capabilities.mof \
   Core_Collection.mof \
   Core_CoreElements.mof \
   Core_Device.mof \
   Core_MethodParms.mof \
   Core_Physical.mof \
   Core_PowerMgmt.mof \
   Core_ProductFRU.mof \
   Core_Qualifiers.mof \
   Core_Redundancy.mof \
   Core_Service.mof \
   Core_Settings.mof \
   Core_Software.mof \
   Core_Statistics.mof \
   Core_StorageExtent.mof \
   Database_Statistics.mof \
   Database_Storage.mof \
   Database_System.mof \
   Device_Controller.mof \
   Device_CoolingAndPower.mof \
   Device_DeviceElements.mof \
   Device_DiskGroup.mof \
   Device_FC.mof \
   Device_IB.mof \
   Device_Memory.mof \
   Device_Modems.mof \
   Device_NetworkAdapter.mof \
   Device_Ports.mof \
   Device_Printing.mof \
   Device_Processor.mof \
   Device_ProtocolController.mof \
   Device_SccExtents.mof \
   Device_Sensors.mof \
   Device_StorageDevices.mof \
   Device_StorageExtents.mof \
   Device_StorageLib.mof \
   Device_StorageServices.mof \
   Device_USB.mof \
   Device_UserDevices.mof \
   Metrics_BaseMetric.mof \
   Metrics_UnitOfWork.mof \
   Network_BGP.mof \
   Network_Buffers.mof \
   Network_Collections.mof \
   Network_Filtering.mof \
   Network_IPsec.mof \
   Network_OSPF.mof \
   Network_Pipes.mof \
   Network_ProtocolEndpoints.mof \
   Network_QoS.mof \
   Network_Routes.mof \
   Network_RoutingForwarding.mof \
   Network_SNMP.mof \
   Network_SwitchingBridging.mof \
   Network_Systems.mof \
   Network_VLAN.mof \
   Physical_Component.mof \
   Physical_Connector.mof \
   Physical_Link.mof \
   Physical_Misc.mof \
   Physical_Package.mof \
   Physical_PhysicalMedia.mof \
   Physical_StoragePackage.mof \
   System_Boot.mof \
   System_Diagnostics.mof \
   System_FileElements.mof \
   System_Help.mof \
   System_Logs.mof \
   System_OperatingSystem.mof \
   System_Processing.mof \
   System_SystemElements.mof \
   System_SystemResources.mof \
   System_Time.mof \
   System_Unix.mof \
   User_AccessControl.mof \
   User_Account.mof \
   User_AuthenticationReqmt.mof \
   User_Credential.mof \
   User_Group.mof \
   User_Identity.mof \
   User_Kerberos.mof \
   User_Org.mof \
   User_Privilege.mof \
   User_PrivilegeManagementService.mof \
   User_PublicKey.mof \
   User_Role.mof \
   User_SecurityLevel.mof \
   User_SecurityServices.mof \
   User_SharedSecret.mof \
   User_StorageHardwareID.mof \
   User_UsersAccess.mof

CIM28_MOF_FILES = \
   Application28_AppRuntime.mof \
   Application28_BIOS.mof \
   Application28_CheckAction.mof \
   Application28_DeploymentModel.mof \
   Application28_InstalledProduct.mof \
   Application28_J2eeAppServer.mof \
   Application28_J2eeAppServerStats.mof \
   Application28_SystemSoftware.mof \
   CIM_Application28.mof \
   CIM_Core28.mof \
   CIM_Database28.mof \
   CIM_Device28.mof \
   CIM_Event28.mof \
   CIM_Interop28.mof \
   CIM_IPsecPolicy28.mof \
   CIM_Metrics28.mof \
   CIM_Network28.mof \
   CIM_Physical28.mof \
   CIM_Policy28.mof \
   CIM_Schema28.mof \
   CIM_Support28.mof \
   CIM_System28.mof \
   CIM_User28.mof \
   Core28_Capabilities.mof \
   Core28_Collection.mof \
   Core28_CoreElements.mof \
   Core28_Device.mof \
   Core28_MethodParms.mof \
   Core28_Physical.mof \
   Core28_PowerMgmt.mof \
   Core28_ProductFRU.mof \
   Core28_Qualifiers.mof \
   Core28_Redundancy.mof \
   Core28_Service.mof \
   Core28_Settings.mof \
   Core28_Software.mof \
   Core28_Statistics.mof \
   Core28_StorageExtent.mof \
   Database28_Statistics.mof \
   Database28_Storage.mof \
   Database28_System.mof \
   Device28_Controller.mof \
   Device28_CoolingAndPower.mof \
   Device28_DeviceElements.mof \
   Device28_DiskGroup.mof \
   Device28_FC.mof \
   Device28_IB.mof \
   Device28_Memory.mof \
   Device28_Modems.mof \
   Device28_NetworkAdapter.mof \
   Device28_Ports.mof \
   Device28_Printing.mof \
   Device28_Processor.mof \
   Device28_ProtocolController.mof \
   Device28_SccExtents.mof \
   Device28_Sensors.mof \
   Device28_StorageDevices.mof \
   Device28_StorageExtents.mof \
   Device28_StorageLib.mof \
   Device28_StorageServices.mof \
   Device28_USB.mof \
   Device28_UserDevices.mof \
   Metrics28_BaseMetric.mof \
   Metrics28_UnitOfWork.mof \
   Network28_BGP.mof \
   Network28_Buffers.mof \
   Network28_Collections.mof \
   Network28_Filtering.mof \
   Network28_IPsec.mof \
   Network28_OSPF.mof \
   Network28_Pipes.mof \
   Network28_ProtocolEndpoints.mof \
   Network28_QoS.mof \
   Network28_Routes.mof \
   Network28_RoutingForwarding.mof \
   Network28_SNMP.mof \
   Network28_SwitchingBridging.mof \
   Network28_Systems.mof \
   Network28_VLAN.mof \
   Physical28_Component.mof \
   Physical28_Connector.mof \
   Physical28_Link.mof \
   Physical28_Misc.mof \
   Physical28_Package.mof \
   Physical28_PhysicalMedia.mof \
   Physical28_StoragePackage.mof \
   System28_Boot.mof \
   System28_Diagnostics.mof \
   System28_FileElements.mof \
   System28_Logs.mof \
   System28_OperatingSystem.mof \
   System28_Processing.mof \
   System28_SystemElements.mof \
   System28_SystemResources.mof \
   System28_Time.mof \
   System28_Unix.mof \
   User28_AccessControl.mof \
   User28_Account.mof \
   User28_AuthenticationReqmt.mof \
   User28_Credential.mof \
   User28_Group.mof \
   User28_Identity.mof \
   User28_Kerberos.mof \
   User28_Org.mof \
   User28_PrivilegeManagementService.mof \
   User28_Privilege.mof \
   User28_PublicKey.mof \
   User28_Role.mof \
   User28_SecurityLevel.mof \
   User28_SecurityServices.mof \
   User28_SharedSecret.mof \
   User28_StorageHardwareID.mof \
   User28_UsersAccess.mof

INTERNAL_MOF_FILES = \
   PG_Authorization20.mof \
   PG_ConfigSetting20.mof \
   PG_InternalSchema20.mof \
   PG_ShutdownService20.mof \
   PG_User20.mof

INTEROP_MOF_FILES = \
   PG_Events20.mof \
   PG_InterOpSchema20.mof \
   PG_ProviderModule20.mof

MANAGEDSYSTEM_MOF_FILES = \
   PG_ComputerSystem20.mof \
   PG_ComputerSystem20R.mof \
   PG_ManagedSystemSchema20.mof \
   PG_ManagedSystemSchema20R.mof \
   PG_OperatingSystem20.mof \
   PG_OperatingSystem20R.mof \
   PG_UnixProcess20.mof \
   PG_UnixProcess20R.mof

ifeq ($(OS),linux)
   INSTALL_SCRIPT_FILES = \
      settogpath
endif

prestage_verifyInstallEnabled: FORCE
ifndef PEGASUS_ENABLE_MAKE_INSTALL
	@$(ECHO) "Makefile.Release is not enabled."
	@exit 1
endif

prestage_cleanup: FORCE
	$(foreach i, $(PEGASUS_DIRECTORIES_TO_BE_REMOVED), $(RMDIRHIER) $(PEGASUS_STAGING_DIR)$(i);)
	$(RMDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)
	$(RMDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_AUTH_DIR)

stage_PegasusProductDirectories: FORCE
	$(foreach i, $(PRODUCT_DIRECTORY_STRUCTURE), $(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(i);)

setpermissions_PegasusProductDirectories: FORCE
	$(foreach i, $(PRODUCT_DIRECTORY_STRUCTURE), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(i);)

stage_PegasusProductDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_LICENSE), $(COPY) $(ROOT)/doc/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_PROD_DIR)/$(i);)

setpermissions_PegasusProductDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_LICENSE), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PROD_DIR)/$(i);)

stage_PegasusSocketDirectory: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)
	
setpermissions_PegasusSocketDirectory: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)
	
stage_PegasusLocalAuthDirectory: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_AUTH_DIR)
	
setpermissions_PegasusLocalAuthDirectory: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_AUTH_DIR)
	
stage_PegasusLibraryDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_LIBRARIES), $(COPY) $(PEGASUS_HOME)/lib/$(i)$(LIB_SUFFIX) $(PEGASUS_STAGING_DIR)$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_SUFFIX);)
	$(foreach i, $(PEGASUS_LIBRARY_LINKS), $(MAKE) -f $(ROOT)/Makefile.Release createlink OBJECT=$(i)$(LIB_SUFFIX) LINKNAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX);)

setpermissions_PegasusLibraryDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_LIBRARIES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_SUFFIX);)
stage_PegasusProviderLibraryDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_PROVIDERS), $(COPY) $(PEGASUS_HOME)/lib/$(i)$(LIB_SUFFIX) $(PEGASUS_STAGING_DIR)$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_SUFFIX);)
	$(foreach i, $(PEGASUS_PROVIDERS), $(MAKE) -f $(ROOT)/Makefile.Release createlink OBJECT=$(i)$(LIB_SUFFIX) LINKNAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX);)

setpermissions_PegasusProviderLibraryDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_PROVIDERS), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_SUFFIX);)

stage_PegasusAdminCmdsDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_ADMIN_CMDS), $(COPY) $(PEGASUS_HOME)/bin/$(i)$(EXE) $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/$(i)$(EXE);)
	$(foreach i, $(INSTALL_SCRIPT_FILES), $(COPY) $(PEGASUS_ROOT)/installs/scripts/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/$(i);)
	@$(RM) $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository
	@$(ECHO-E) "PEGASUS_MOF_DIR=$(PEGASUS_MOF_DIR)" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository
	@$(ECHO-E) "PEGASUS_CIMXX_MOF_DIR=$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository
	@$(ECHO-E) "PEGASUS_REPOSITORY_DIR=$(PEGASUS_REPOSITORY_DIR)" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository
	@$(ECHO-E) "PEGASUS_BIN_DIR=$(PEGASUS_BIN_DIR)" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository
	@$(ECHO-E) "PEGASUS_CIM_SCHEMA=$(PEGASUS_CIM_SCHEMA_VERSION)" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository
	@$(CAT) $(PEGASUS_ROOT)/installs/scripts/init_repository >> $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/init_repository

setpermissions_PegasusAdminCmdsDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_ADMIN_CMDS), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/$(i)$(EXE);)
	$(foreach i, $(INSTALL_SCRIPT_FILES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/$(i);)
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)/init_repository

stage_PegasusUserCmdsDirectoryFiles: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)
	$(foreach i, $(PEGASUS_USER_CMDS), $(COPY) $(PEGASUS_HOME)/bin/$(i)$(EXE) $(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)/$(i)$(EXE);)

setpermissions_PegasusUserCmdsDirectoryFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)
	$(foreach i, $(PEGASUS_USER_CMDS), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)/$(i)$(EXE);)

stage_RepositoryNamespaceDirectory: FORCE
	$(CPDIRHIER) $(NAMESPACE_DIR_NAME) $(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)

setpermissions_RepositoryNamespaceDirectory: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release sethierpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/classes
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/classes
	$(MAKE) -f $(ROOT)/Makefile.Release sethierpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/classes
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/instances
	$(MAKE) -f $(ROOT)/Makefile.Release sethierpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/instances
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/qualifiers
	$(MAKE) -f $(ROOT)/Makefile.Release sethierpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/qualifiers

stage_PegasusRepositoryDirectories: FORCE
	$(foreach i, $(PEGASUS_REPOSITORY_DIRS), $(MAKE) --directory=$(PEGASUS_HOME)/repository -f $(ROOT)/Makefile.Release stage_RepositoryNamespaceDirectory NAMESPACE_DIR_NAME=$(i);)

setpermissions_PegasusRepositoryDirectories: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release sethierpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)
	$(foreach i, $(PEGASUS_REPOSITORY_DIRS), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions_RepositoryNamespaceDirectory NAMESPACE_DIR_NAME=$(i);)

stage_PegasusUnixManPageDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_UNIX_MAN_USER_PAGES), $(COPY) $(ROOT)/rpm/manLinux/man1.Z/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MANUSER_DIR)/$(i);)
	$(foreach i, $(PEGASUS_UNIX_MAN_ADMIN_PAGES), $(COPY) $(ROOT)/rpm/manLinux/man8.Z/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MANADMIN_DIR)/$(i);)

setpermissions_PegasusUnixManPageDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_UNIX_MAN_USER_PAGES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MANUSER_DIR)/$(i);)
	$(foreach i, $(PEGASUS_UNIX_MAN_ADMIN_PAGES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MANADMIN_DIR)/$(i);)

stage_PegasusDocFiles: FORCE
	$(foreach i, $(PEGASUS_DOC_FILES), $(COPY) $(ROOT)/doc/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_DOC_DIR)/$(i);)

setpermissions_PegasusDocFiles: FORCE
	$(foreach i, $(PEGASUS_DOC_FILES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_DOC_DIR)/$(i);)

copyCIMSchemaFiles: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)
	$(foreach i, $($(PEGASUS_CIM_SCHEMA)_MOF_FILES), $(COPY) $(ROOT)/Schemas/$(PEGASUS_CIM_SCHEMA)/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)/$(i);)
	
setpermissions_CIMSchemaFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)
	$(foreach i, $($(PEGASUS_CIM_SCHEMA)_MOF_FILES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)/$(i);)
	
stage_PegasusMOFDirectoryFiles: FORCE
	$(MAKE) --directory=$(ROOT)/Schemas -f $(ROOT)/Makefile.Release copyCIMSchemaFiles
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus
	$(foreach i, $(INTERNAL_MOF_FILES), $(COPY) $(ROOT)/Schemas/Pegasus/Internal/VER20/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)
	$(foreach i, $(INTEROP_MOF_FILES), $(COPY) $(ROOT)/Schemas/Pegasus/InterOp/VER20/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)
	$(foreach i, $(MANAGEDSYSTEM_MOF_FILES), $(COPY) $(ROOT)/Schemas/Pegasus/ManagedSystem/VER20/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)

setpermissions_PegasusMOFDirectoryFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_CIMSchemaFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus
	$(foreach i, $(INTERNAL_MOF_FILES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)
	$(foreach i, $(INTEROP_MOF_FILES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)
	$(foreach i, $(MANAGEDSYSTEM_MOF_FILES), $(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)

stage_PegasusVarDataDirectoryFiles: FORCE
	$(COPY) $(ROOT)/src/Server/cimserver_planned.conf $(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_PLANNED_CONFIG_FILE)

setpermissions_PegasusVarDataDirectoryFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_PLANNED_CONFIG_FILE)

stage_SSLConfigurationFile: FORCE
	$(RM) $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(TOUCH) $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "[ req ]" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "distinguished_name     = req_distinguished_name"  >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "prompt                 = no"  >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "[ req_distinguished_name ]" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "C                      = UK" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "ST                     = Berkshire" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "L                      = Reading" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "O                      = The Open Group" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "OU                     = The OpenPegasus Project" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "CN                     = \`uname -n\`" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf

setpermissions_SSLConfigurationFile: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf

stage_SSLRandomSeedFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release createrandomseed FILENAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_CIMSERVER_RANDOMFILE)
	$(MAKE) -f $(ROOT)/Makefile.Release createrandomseed FILENAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_WBEMEXEC_RANDOMFILE)

setpermissions_SSLRandomSeedFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_CIMSERVER_RANDOMFILE)
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_WBEMEXEC_RANDOMFILE)

stage_ServerCertificateFiles: FORCE
ifdef PEGASUS_SSL_RANDOMFILE
	$(OPENSSL_COMMAND) req -x509 -days 3650 -newkey rsa:2048 -rand $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/$(PEGASUS_CIMSERVER_RANDOMFILE) -nodes -config $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf -keyout $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_KEY_FILE) -out $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE) 
else
	$(OPENSSL_COMMAND) req -x509 -days 3650 -newkey rsa:2048 -nodes -config $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf -keyout $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_KEY_FILE) -out $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE) 
endif

setpermissions_ServerCertificateFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_KEY_FILE)
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE)

stage_ClientCertificateFiles: FORCE
	$(COPY) $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE) $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_TRUSTSTORE)

setpermissions_ClientCertificateFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Pr__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_TRUSTSTORE)

stage_PegasusDirectories: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusProductDirectories
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusSocketDirectory
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusLocalAuthDirectory

setpermissions_PegasusDirectories: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusProductDirectories
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusSocketDirectory
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusLocalAuthDirectory

stage_PegasusFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusProductDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusLibraryDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusProviderLibraryDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusAdminCmdsDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusUserCmdsDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusVarDataDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusRepositoryDirectories
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusUnixManPageDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusDocFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusMOFDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusSSLFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_PegasusSystemFiles

setpermissions_PegasusFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusProductDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusLibraryDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusProviderLibraryDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusAdminCmdsDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusUserCmdsDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusVarDataDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusRepositoryDirectories
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusUnixManPageDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusDocFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusMOFDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusSSLFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_PegasusSystemFiles

stage_PegasusSSLFiles: FORCE
ifdef PEGASUS_HAS_SSL
	$(MAKE) -f $(ROOT)/Makefile.Release stage_SSLConfigurationFile
ifdef PEGASUS_SSL_RANDOMFILE
	$(MAKE) -f $(ROOT)/Makefile.Release stage_SSLRandomSeedFiles
endif
	$(MAKE) -f $(ROOT)/Makefile.Release stage_ServerCertificateFiles
	$(MAKE) -f $(ROOT)/Makefile.Release stage_ClientCertificateFiles
endif

setpermissions_PegasusSSLFiles: FORCE
ifdef PEGASUS_HAS_SSL
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_SSLConfigurationFile
ifdef PEGASUS_SSL_RANDOMFILE
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_SSLRandomSeedFiles
endif
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_ServerCertificateFiles
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions_ClientCertificateFiles
endif


stage_PegasusSystemFiles: FORCE
ifeq ($(OS),linux)
ifdef PEGASUS_PAM_AUTHENTICATION
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PAM_CONFIG_DIR)
	$(COPY) $(ROOT)/rpm/wbem $(PEGASUS_STAGING_DIR)$(PAM_CONFIG_DIR)/wbem
endif
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)/etc/init.d
	$(COPY) $(ROOT)/rpm/tog-pegasus.rc $(PEGASUS_STAGING_DIR)/etc/init.d/tog-pegasus
endif

setpermissions_PegasusSystemFiles: FORCE
ifeq ($(OS),linux)
ifdef PEGASUS_PAM_AUTHENTICATION
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prw_r__r__)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PAM_CONFIG_DIR)/wbem
endif
	$(MAKE) -f $(ROOT)/Makefile.Release setpermissions PERMISSIONS="$(Prwxr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)etc/init.d/tog-pegasus
endif

create_ProductVersionFile: FORCE
ifdef PEGASUS_OVERRIDE_PRODUCT_ID
ifdef PEGASUS_PRODUCT_NAME
ifdef PEGASUS_PRODUCT_VERSION
ifdef PEGASUS_PRODUCT_STATUS
	@$(ECHO-E) "#ifndef Product_Version_h" > $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#define Product_Version_h" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) " " >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#define PEGASUS_PRODUCT_NAME "\""$(PEGASUS_PRODUCT_NAME)"\""" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#define PEGASUS_PRODUCT_VERSION "\""$(PEGASUS_PRODUCT_VERSION)"\""" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#define PEGASUS_PRODUCT_STATUS "\""$(PEGASUS_PRODUCT_STATUS)"\""" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) " " >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#define PEGASUS_CIMOM_GENERIC_NAME \"Pegasus\"" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#define PEGASUS_CIMOM_DESCRIPTION \"\"" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
	@$(ECHO-E) "#endif /* Product_Version_h */" >> $(ROOT)/src/Pegasus/Common/ProductVersion.h
endif
endif
endif
endif

create_OpenPegasusRPMSpecFile: FORCE
	@$(RM) $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_OpenPegasusLicenseToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_PreambleToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_PackagesToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_prepSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_setupSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_buildSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_installSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_cleanSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_preSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_postSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_preunSectionToSpecFile
	@$(MAKE) -f $(ROOT)/mak/SDKMakefile PEGASUS_RPM_SPEC_FILE_PATH=$(PEGASUS_RPM_SPEC_FILE_PATH) _append_preunSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.ReleaseTest PEGASUS_RPM_SPEC_FILE_PATH=$(PEGASUS_RPM_SPEC_FILE_PATH) _append_preunSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_postunSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_filesSectionToSpecFile
	@$(MAKE) -f $(ROOT)/mak/SDKMakefile PEGASUS_RPM_SPEC_FILE_PATH=$(PEGASUS_RPM_SPEC_FILE_PATH) _append_filesSectionToSpecFile
	@$(MAKE) -f $(ROOT)/Makefile.ReleaseTest PEGASUS_RPM_SPEC_FILE_PATH=$(PEGASUS_RPM_SPEC_FILE_PATH) _append_filesSectionToSpecFile

_append_OpenPegasusLicenseToSpecFile: FORCE
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-header.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "#" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# WARNING: This file is automatically generated by executing " >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "#   make -f pegasus/Makefile.Release create_OpenPegasusRPMSpecFile" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Any changes made directly to this file will be lost the next " >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# time this file is generated." >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "#" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_PreambleToSpecFile: FORCE
	@$(ECHO-E) "%define srcRelease 1" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "Version: $(PEGASUS_PRODUCT_VERSION)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "Release: 1" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "Epoch:   1" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-intro.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-intro.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-intro.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global OPENSSL_HOME $(OPENSSL_HOME)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global OPENSSL_BIN $(OPENSSL_BIN)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_PEM_DIR $(PEGASUS_PEM_DIR)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_SSL_CERT_FILE $(PEGASUS_SSL_CERT_FILE)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_SSL_KEY_FILE $(PEGASUS_SSL_KEY_FILE)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_SSL_TRUSTSTORE $(PEGASUS_SSL_TRUSTSTORE)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PAM_CONFIG_DIR /etc/pam.d" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_CONFIG_DIR $(PEGASUS_CONFIG_DIR)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_REPOSITORY_DIR $(PEGASUS_REPOSITORY_DIR)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_PREV_REPOSITORY_DIR $(PEGASUS_PREV_REPOSITORY_DIR)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_SBIN_DIR $(PEGASUS_SBIN_DIR)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_DOC_DIR $(PEGASUS_DOC_DIR)" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_RPM_ROOT \044RPM_BUILD_DIR/\044RPM_PACKAGE_NAME-\044RPM_PACKAGE_VERSION" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_RPM_HOME \044RPM_BUILD_ROOT/build/tog-pegasus" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_INSTALL_LOG $(PEGASUS_LOG_DIR)/install.log" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch ia64" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_IA64_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%else" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch x86_64" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_X86_64_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%else" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch ppc" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_PPC_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%else" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch ppc64 pseries" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_PPC64_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%else" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch s390" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_ZSERIES_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%else" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch s390x zseries" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_ZSERIES64_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%else" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%global PEGASUS_HARDWARE_PLATFORM LINUX_IX86_GNU" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_PackagesToSpecFile: FORCE
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-packages.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-packages.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-packages.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_prepSectionToSpecFile: FORCE
	@$(ECHO-E) "%prep" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "[ \"\044RPM_BUILD_ROOT\" != \"/\" ] && [ -d \044RPM_BUILD_ROOT ] && rm -rf \044RPM_BUILD_ROOT;" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	
_append_setupSectionToSpecFile: FORCE
	@$(ECHO-E) "%setup -n %{name}-%{version}" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "export PEGASUS_ROOT=%PEGASUS_RPM_ROOT" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_buildSectionToSpecFile: FORCE
	@$(ECHO-E) "%build" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%ifarch s390 s390x zseries" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "export PEGASUS_EXTRA_C_FLAGS=\"\044PEGASUS_EXTRA_C_FLAGS -fsigned-char\"" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%endif" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-build.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-build.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-build.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_installSectionToSpecFile: FORCE
	@$(ECHO-E) "%install" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-install.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-install.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-install.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "[ \"\044PEGASUS_STAGING_DIR\" != \"/\" ] && [ -d \044PEGASUS_STAGING_DIR ] && \
                    [ -d \044PEGASUS_STAGING_DIR%PEGASUS_PEM_DIR ] && \
                    rm -f \044PEGASUS_STAGING_DIR/%PEGASUS_PEM_DIR/%PEGASUS_SSL_TRUSTSTORE \
                    \044PEGASUS_STAGING_DIR/%PEGASUS_PEM_DIR/%PEGASUS_SSL_CERT_FILE \
                    \044PEGASUS_STAGING_DIR/%PEGASUS_PEM_DIR/%PEGASUS_SSL_KEY_FILE \
                    \044PEGASUS_STAGING_DIR/%PEGASUS_CONFIG_DIR/ssl.cnf;" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "[ \"\044PEGASUS_HOME\" != \"/\" ] && [ -d \044PEGASUS_HOME ] && rm -rf \044PEGASUS_HOME;" >> \
                    $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_cleanSectionToSpecFile: FORCE
	@$(ECHO-E) "%clean" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-clean.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-clean.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-clean.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_preSectionToSpecFile: FORCE
	@$(ECHO-E) "%pre" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-pre.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-pre.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-pre.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
 
_append_postSectionToSpecFile: FORCE
	@$(ECHO-E) "%post" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "if [ \044\061 -eq 1 ]; then" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_postSectionToSpecFile_createLog
	@$(MAKE) -f $(ROOT)/Makefile.Release _append_postSectionToSpecFile_createSymbolicLinks
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# Start of section pegasus/rpm/tog-specfiles/tog-pegasus-post.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(CAT) $(ROOT)/rpm/tog-specfiles/tog-pegasus-post.spec >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "# End of section pegasus/rpm/tog-specfiles/tog-pegasus-post.spec" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "elif [ \044\061 -gt 1 ]; then" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "/sbin/service tog-pegasus condrestart" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ":;" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "fi" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_postSectionToSpecFile_createSymbolicLinks: FORCE
	@$(ECHO-E) "   # Create Symbolic Links for SDK Libraries" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   #" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_LIBRARY_LINKS), $(ECHO-E) "   ln -sf $(i)$(LIB_SUFFIX)\
                      $(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   # Create Symbolic Links for Packaged Provider Libraries" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   #" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_PROVIDERS), $(ECHO-E) "   ln -sf $(i)$(LIB_SUFFIX)\
                      $(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_postSectionToSpecFile_createLog: FORCE
	@$(ECHO-E) "   echo \`date\` > %PEGASUS_INSTALL_LOG 2>&1" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   %define PEGASUS_CONFIG_DIR $(PEGASUS_CONFIG_DIR)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   %define PEGASUS_PEM_DIR $(PEGASUS_PEM_DIR)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   %define PEGASUS_SSL_CERT_FILE $(PEGASUS_SSL_CERT_FILE)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   %define PEGASUS_SSL_KEY_FILE $(PEGASUS_SSL_KEY_FILE)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   %define PEGASUS_SSL_TRUSTSTORE $(PEGASUS_SSL_TRUSTSTORE)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "" >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_preunSectionToSpecFile: FORCE
	@$(ECHO-E) "%preun" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "if [ \044\061 -eq 0 ]; then" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   # Check if the cimserver is running" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   isRunning=\140ps -el | grep cimserver | grep -v \"grep cimserver\"\140" \
                      >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   if [ \"\044isRunning\" ]; then"  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "      $(PEGASUS_SBIN_DIR)/cimserver -s"  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   fi"  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -f $(PEGASUS_VARDATA_DIR)/$(PEGASUS_CURRENT_CONFIG_FILE) ] && \
                       rm $(PEGASUS_VARDATA_DIR)/$(PEGASUS_CURRENT_CONFIG_FILE);" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -f %PEGASUS_INSTALL_LOG ] && rm %PEGASUS_INSTALL_LOG;" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -d $(PEGASUS_REPOSITORY_DIR) ] && rm -rf $(PEGASUS_REPOSITORY_DIR);" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -d $(PEGASUS_VARDATA_CACHE_DIR) ] && rm -rf $(PEGASUS_VARDATA_CACHE_DIR);" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   rm -f $(PEGASUS_LOCAL_DOMAIN_SOCKET_PATH);" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   rm -f $(PEGASUS_CIMSERVER_START_FILE)" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   # Delete the Link to the rc.* Startup Directories" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   /usr/lib/lsb/remove_initd /etc/init.d/tog-pegasus;"  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "fi"  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_postunSectionToSpecFile: FORCE
	@$(ECHO-E) "%postun" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "if [ \044\061 -eq 0 ]; then" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -f %PEGASUS_PEM_DIR/key-2048.pem ] && rm %PEGASUS_PEM_DIR/key-2048.pem;" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -f %PEGASUS_PEM_DIR/cert-2048.pem ] && rm %PEGASUS_PEM_DIR/cert-2048.pem;" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   [ -f %PEGASUS_PEM_DIR/truststore-2048.pem ] && rm %PEGASUS_PEM_DIR/truststore-2048.pem;" >> \
                       $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "   export LC_ALL=C">> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "fi"  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)

_append_filesSectionToSpecFile: FORCE
	@$(ECHO-E) "%files" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PRODUCT_DIRECTORY_STRUCTURE), if [ $(i) != $(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR) ]; then \
                                                      if [ $(i) != $(PEGASUS_REPOSITORY_DIR) ]; then \
                                                      if [ $(i) != $(PEGASUS_TRACE_DIR) ]; then \
                   $(ECHO-E) "%dir %attr($(Pr_xr_xr_x),$(INSTALL_USR),$(INSTALL_GRP)) $(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH); fi; fi; fi;) 
	@$(ECHO-E) "%dir %attr(1555,$(CIMSERVER_USR),$(CIMSERVER_GRP)) $(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%dir %attr($(Pr_xr_xr_x),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%dir %attr($(Pr_xr_xr_x),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MOF_DIR)/Pegasus" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%dir %attr($(Prwxrwxrwt),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_TRACE_DIR)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%attr(-,$(CIMSERVER_USR),$(CIMSERVER_GRP)) $(PEGASUS_REPOSITORY_DIR)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_LICENSE), \
	           $(ECHO-E) "%doc %attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_PROD_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(foreach i, $(PEGASUS_UNIX_MAN_USER_PAGES), \
                   $(ECHO-E) "%doc %attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MANUSER_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(foreach i, $(PEGASUS_UNIX_MAN_ADMIN_PAGES), \
                   $(ECHO-E) "%doc %attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MANADMIN_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(foreach i, $(PEGASUS_DOC_FILES), \
                   $(ECHO-E) "%doc %attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_DOC_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $($(PEGASUS_CIM_SCHEMA)_MOF_FILES), \
                   $(ECHO-E) "%attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(INTERNAL_MOF_FILES), \
                   $(ECHO-E) "%attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MOF_DIR)/Pegasus/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(foreach i, $(INTEROP_MOF_FILES), \
                   $(ECHO-E) "%attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MOF_DIR)/Pegasus/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(foreach i, $(MANAGEDSYSTEM_MOF_FILES), \
                   $(ECHO-E) "%attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_MOF_DIR)/Pegasus/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%config(noreplace) %attr($(Prw_r__r__),$(CIMSERVER_USR),$(CIMSERVER_GRP)) \
                   $(PEGASUS_VARDATA_DIR)/$(PEGASUS_PLANNED_CONFIG_FILE)" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%config %attr($(Pr_x______),$(INSTALL_USR),$(INSTALL_GRP)) /etc/init.d/tog-pegasus" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) "%config %attr($(Pr__r__r__),$(INSTALL_USR),$(INSTALL_GRP)) %PAM_CONFIG_DIR/wbem" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_ADMIN_CMDS), \
                   $(ECHO-E) "%attr($(Pr_x______),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_SBIN_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(ECHO-E) "%attr($(Pr_x______),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_SBIN_DIR)/init_repository" >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(INSTALL_SCRIPT_FILES), \
                   $(ECHO-E) "%attr($(Pr_x______),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_SBIN_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_USER_CMDS), \
                   $(ECHO-E) "%attr($(Pr_xr_xr_x),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_BIN_DIR)/$(i)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_LIBRARIES), \
                   $(ECHO-E) "%attr($(Pr_xr_xr_x),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_SUFFIX)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(foreach i, $(PEGASUS_LIBRARY_LINKS), \
                   $(ECHO-E) "$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)
	@$(foreach i, $(PEGASUS_PROVIDERS), \
                   $(ECHO-E) "%attr($(Pr_xr_xr_x),$(INSTALL_USR),$(INSTALL_GRP)) $(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_SUFFIX)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(foreach i, $(PEGASUS_PROVIDERS), \
                   $(ECHO-E) "$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX)" >> $(PEGASUS_RPM_SPEC_FILE_PATH);) 
	@$(ECHO-E) ""  >> $(PEGASUS_RPM_SPEC_FILE_PATH)

include $(ROOT)/mak/commands.mak
