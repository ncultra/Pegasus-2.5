<html>
<head>
<script>
	function rTrim(tempStr){
                     while( tempStr.lastIndexOf(' ') == tempStr.length-1 && tempStr.length > 0 )
                     { 
                         tempStr = tempStr.substring(0,tempStr.length-1) 
                     }
                     document.InvokeMethod.InstanceName.value = tempStr;
	}
</script>
</head>
	<body bgcolor="#cccccc">
		<table width="100%">
			<tr>
				<td width="50%" align="bottom"><h1>Invoke an Extrinsic Method</h1>
				<td>
				<td width="50%" align="right">
					<img border="1" src="/pegasus/icons/OpenGroupLogo.gif">
				</td>
			</tr>
		</table>
		<hr>
		<form name="InvokeMethod" METHOD="get" ACTION="/pegasus/cgi-bin/CGIClient">
			<INPUT TYPE="hidden" NAME="Operation" VALUE="InvokeMethod"> <INPUT TYPE="hidden" NAME="hostaddress" VALUE="localhost:5988">
			<INPUT TYPE="hidden" NAME="debug">
			<p>
			Invoke an extrinsic method on an Instance present in the Namespace.
			<p>NameSpace&nbsp;&nbsp;&nbsp; <INPUT TYPE="text" NAME="NameSpace" SIZE="30" VALUE="root/cimv2">
				String that defines the target namespace. See <A href="enumeratenamespaces.html">NameSpace 
					Operations</A>
			for more information
			<p>InstanceName&nbsp;&nbsp;&nbsp; <INPUT TYPE="text" NAME="InstanceName" SIZE="30">&nbsp;The 
				name of the Instance&nbsp;on which the method is to&nbsp;be invoked. See <A href="EnumerateInstanceNames.html">
					Enumerate Instance Names</A>
			for instance names for a class
			<p>MethodName&nbsp;&nbsp;&nbsp; <INPUT TYPE="text" NAME="MethodName" SIZE="30"> The 
				name of the method that is to be invoked. See <A href="GetClass.html">Get Class</A>
			&nbsp;for&nbsp;methods&nbsp;supported&nbsp;by a class
			<p>Arguments&nbsp;&nbsp;&nbsp; <INPUT TYPE="text" NAME="ArgumentList" SIZE="30">
			&nbsp; Input parameters in the same sequence&nbsp;as expected by the method. 
			Delimit multiple parameters with a semicolon. Eg., Sam;1234;true;Sales
			<p>
			<p><INPUT TYPE="submit" VALUE="Submit Request" name="Submit" onClick="rTrim(document.InvokeMethod.InstanceName.value);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<INPUT TYPE="reset" VALUE="Reset Form">
			<p>
		</form>
		<hr>
		&nbsp;
		<hr>
		<h2>Return Request</h2>
		If the Cim Server is unable to perform the extrinsic method invocation, one of 
		the following status codes MUST be returned by the CimServer, where the first 
		applicable error in the list (starting with the first element of the list, and 
		working down) is the error returned. Any additional specific interpretation of 
		the error is given in parentheses.
		<UL>
			<LI>
			CIM_ERR_ACCESS_DENIED
			<LI>
			CIM_ERR_NOT_SUPPORTED (the CimServer does not support extrinsic method 
			invocations)
			<LI>
			CIM_ERR_INVALID_NAMESPACE
			<LI>
			CIM_ERR_INVALID_PARAMETER (including missing, duplicate, unrecognized or 
			otherwise incorrect parameters)
			<LI>
			CIM_ERR_NOT_FOUND (the target CIM Class or instance does not exist in the 
			specified namespace)
			<LI>
			CIM_ERR_METHOD_NOT_FOUND
			<LI>
			CIM_ERR_METHOD_NOT_AVAILABLE (the CimServer is unable to honor the invocation 
			request)
			<LI>
				CIM_ERR_FAILED (some other unspecified error occurred)</LI>
		</UL>
		<hr>
		<h2>Additional Description</h2>
		<p>
			Any CIM Server is assumed to support extrinsic methods. Extrinsic methods are 
			defined by the Schema supported by the Cim Server. If a Cim Server does not 
			support extrinsic method invocations, it MUST (subject to the considerations 
			described in the rest of this section) return the error code 
			CIM_ERR_NOT_SUPPORTED to any request to execute an extrinsic method. This 
			allows a CIM client to determine that all attempts to execute extrinsic methods 
			will fail.</p>
		<hr>
		<h2>C++ API</h2>
		<pre>
    virtual CIMValue invokeMethod(
		const String&amp; nameSpace,
		const CIMReference&amp; instanceName,
		const String&amp; methodName,
		const Array<CIMValue>&amp; inParameters,
		Array<CIMValue>&amp; outParameters) = 0;    </pre>
		<hr>
		<p style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
			<font size="2">Demonstration Prepared by the OpenGroup Manageability Work Group 
				Pegasus Development Team</font>
		<p style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
			<font size="2">See (<a href="http://www.opengroup.org/management">http://www.opengroup.org/management</a>) 
				for more information on Pegasus</font>
		<p style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
			<font size="1">Last Modified <!--webbot bot="Timestamp" S-Type="EDITED"
    S-Format="%A, %B %d, %Y %I:%M:%S %p" startspan -->
				Friday, June 29, 2001 06:46:22 PM<!--webbot bot="Timestamp" i-CheckSum="54909" endspan -->
				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Copyright @ The Open Group 2001&nbsp;</font>
			<script>
   	   document.InvokeMethod.hostaddress.value = top.hostAddress;
       document.InvokeMethod.debug.value = top.debug
       document.InvokeMethod.NameSpace.value = top.NameSpace

	   window.focus();
			</script>
		</p>
	</body>
</html>
